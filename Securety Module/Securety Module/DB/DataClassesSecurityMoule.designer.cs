#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Securety_Module.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AlmanarSec")]
	public partial class DataClassesSecurityMouleDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAction(Action instance);
    partial void UpdateAction(Action instance);
    partial void DeleteAction(Action instance);
    partial void InsertActionDetail(ActionDetail instance);
    partial void UpdateActionDetail(ActionDetail instance);
    partial void DeleteActionDetail(ActionDetail instance);
    partial void InsertRank(Rank instance);
    partial void UpdateRank(Rank instance);
    partial void DeleteRank(Rank instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DataClassesSecurityMouleDataContext() : 
				base(global::Securety_Module.Properties.Settings.Default.AlmanarSecConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSecurityMouleDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSecurityMouleDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSecurityMouleDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSecurityMouleDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Action> Actions
		{
			get
			{
				return this.GetTable<Action>();
			}
		}
		
		public System.Data.Linq.Table<UserActio> UserActios
		{
			get
			{
				return this.GetTable<UserActio>();
			}
		}
		
		public System.Data.Linq.Table<ActionDetail> ActionDetails
		{
			get
			{
				return this.GetTable<ActionDetail>();
			}
		}
		
		public System.Data.Linq.Table<Rank> Ranks
		{
			get
			{
				return this.GetTable<Rank>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ActionDetailInsetUpdate")]
		public ISingleResult<ActionDetailInsetUpdateResult> ActionDetailInsetUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionDetailName", DbType="NVarChar(100)")] string actionDetailName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionID", DbType="Int")] System.Nullable<int> actionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NChar(250)")] string notes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionDetailName, actionID, notes);
			return ((ISingleResult<ActionDetailInsetUpdateResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserLogin", IsComposable=true)]
		public object UserLogin([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ActionDetailSelectByAction")]
		public ISingleResult<ActionDetailSelectByActionResult> ActionDetailSelectByAction([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionID", DbType="NVarChar(100)")] string actionID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionID);
			return ((ISingleResult<ActionDetailSelectByActionResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ActionInsetUpdate")]
		public int ActionInsetUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionName", DbType="NVarChar(100)")] string actionName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Notes", DbType="NChar(250)")] string notes)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), actionName, notes);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ChangePassword")]
		public int ChangePassword([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(100)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(250)")] string password)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, password);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.CheckAction")]
		public int CheckAction([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionName", DbType="NVarChar(100)")] string actionName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, actionName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SelectUserNameActions")]
		public ISingleResult<SelectUserNameActionsResult> SelectUserNameActions([global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(50)")] string userName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), userName);
			return ((ISingleResult<SelectUserNameActionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserActioDelete")]
		public int UserActioDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionName", DbType="NVarChar(100)")] string actionName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, actionName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserActioDetailInser")]
		public int UserActioDetailInser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionDetailName", DbType="NVarChar(100)")] string actionDetailName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, actionDetailName);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserActioInser")]
		public int UserActioInser([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="NVarChar(50)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ActionName", DbType="NVarChar(100)")] string actionName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name, actionName);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Action")]
	public partial class Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionID;
		
		private string _ActionName;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionIDChanging(int value);
    partial void OnActionIDChanged();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Action()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserActio")]
	public partial class UserActio
	{
		
		private string _Name;
		
		private string _ActionName;
		
		public UserActio()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(100)")]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this._ActionName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActionDetail")]
	public partial class ActionDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ActionDetailId;
		
		private System.Nullable<int> _ActionID;
		
		private string _ActionDetailName;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionDetailIdChanging(int value);
    partial void OnActionDetailIdChanged();
    partial void OnActionIDChanging(System.Nullable<int> value);
    partial void OnActionIDChanged();
    partial void OnActionDetailNameChanging(string value);
    partial void OnActionDetailNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public ActionDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDetailId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ActionDetailId
		{
			get
			{
				return this._ActionDetailId;
			}
			set
			{
				if ((this._ActionDetailId != value))
				{
					this.OnActionDetailIdChanging(value);
					this.SendPropertyChanging();
					this._ActionDetailId = value;
					this.SendPropertyChanged("ActionDetailId");
					this.OnActionDetailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int")]
		public System.Nullable<int> ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this.OnActionIDChanging(value);
					this.SendPropertyChanging();
					this._ActionID = value;
					this.SendPropertyChanged("ActionID");
					this.OnActionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDetailName", DbType="NVarChar(100)")]
		public string ActionDetailName
		{
			get
			{
				return this._ActionDetailName;
			}
			set
			{
				if ((this._ActionDetailName != value))
				{
					this.OnActionDetailNameChanging(value);
					this.SendPropertyChanging();
					this._ActionDetailName = value;
					this.SendPropertyChanged("ActionDetailName");
					this.OnActionDetailNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rank")]
	public partial class Rank : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RankID;
		
		private string _RankName;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRankIDChanging(int value);
    partial void OnRankIDChanged();
    partial void OnRankNameChanging(string value);
    partial void OnRankNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Rank()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RankID
		{
			get
			{
				return this._RankID;
			}
			set
			{
				if ((this._RankID != value))
				{
					this.OnRankIDChanging(value);
					this.SendPropertyChanging();
					this._RankID = value;
					this.SendPropertyChanged("RankID");
					this.OnRankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankName", DbType="NVarChar(250)")]
		public string RankName
		{
			get
			{
				return this._RankName;
			}
			set
			{
				if ((this._RankName != value))
				{
					this.OnRankNameChanging(value);
					this.SendPropertyChanging();
					this._RankName = value;
					this.SendPropertyChanged("RankName");
					this.OnRankNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserCode;
		
		private string _Name;
		
		private System.Nullable<int> _RankID;
		
		private string _PassWord;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserCodeChanging(int value);
    partial void OnUserCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRankIDChanging(System.Nullable<int> value);
    partial void OnRankIDChanged();
    partial void OnPassWordChanging(string value);
    partial void OnPassWordChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RankID", DbType="Int")]
		public System.Nullable<int> RankID
		{
			get
			{
				return this._RankID;
			}
			set
			{
				if ((this._RankID != value))
				{
					this.OnRankIDChanging(value);
					this.SendPropertyChanging();
					this._RankID = value;
					this.SendPropertyChanged("RankID");
					this.OnRankIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PassWord", DbType="NVarChar(250)")]
		public string PassWord
		{
			get
			{
				return this._PassWord;
			}
			set
			{
				if ((this._PassWord != value))
				{
					this.OnPassWordChanging(value);
					this.SendPropertyChanging();
					this._PassWord = value;
					this.SendPropertyChanged("PassWord");
					this.OnPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class ActionDetailInsetUpdateResult
	{
		
		private System.Nullable<decimal> _Column1;
		
		public ActionDetailInsetUpdateResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Decimal(38,0)")]
		public System.Nullable<decimal> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class ActionDetailSelectByActionResult
	{
		
		private int _ActionDetailId;
		
		private System.Nullable<int> _ActionID;
		
		private string _ActionDetailName;
		
		private System.Nullable<bool> _IsActive;
		
		private string _Notes;
		
		public ActionDetailSelectByActionResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDetailId", DbType="Int NOT NULL")]
		public int ActionDetailId
		{
			get
			{
				return this._ActionDetailId;
			}
			set
			{
				if ((this._ActionDetailId != value))
				{
					this._ActionDetailId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionID", DbType="Int")]
		public System.Nullable<int> ActionID
		{
			get
			{
				return this._ActionID;
			}
			set
			{
				if ((this._ActionID != value))
				{
					this._ActionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDetailName", DbType="NVarChar(100)")]
		public string ActionDetailName
		{
			get
			{
				return this._ActionDetailName;
			}
			set
			{
				if ((this._ActionDetailName != value))
				{
					this._ActionDetailName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this._Notes = value;
				}
			}
		}
	}
	
	public partial class SelectUserNameActionsResult
	{
		
		private string _ActionName;
		
		public SelectUserNameActionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(100)")]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this._ActionName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
