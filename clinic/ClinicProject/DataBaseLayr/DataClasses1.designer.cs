#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClinicProject.DataBaseLayr
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="test3")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDoctor(Doctor instance);
    partial void UpdateDoctor(Doctor instance);
    partial void DeleteDoctor(Doctor instance);
    partial void Insertemployee(employee instance);
    partial void Updateemployee(employee instance);
    partial void Deleteemployee(employee instance);
    partial void Insertjob(job instance);
    partial void Updatejob(job instance);
    partial void Deletejob(job instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void Insertspecialize(specialize instance);
    partial void Updatespecialize(specialize instance);
    partial void Deletespecialize(specialize instance);
    partial void Insertvisit(visit instance);
    partial void Updatevisit(visit instance);
    partial void Deletevisit(visit instance);
    partial void InsertAction(Action instance);
    partial void UpdateAction(Action instance);
    partial void DeleteAction(Action instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ClinicProject.Properties.Settings.Default.test3ConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Doctor> Doctors
		{
			get
			{
				return this.GetTable<Doctor>();
			}
		}
		
		public System.Data.Linq.Table<employee> employees
		{
			get
			{
				return this.GetTable<employee>();
			}
		}
		
		public System.Data.Linq.Table<job> jobs
		{
			get
			{
				return this.GetTable<job>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<specialize> specializes
		{
			get
			{
				return this.GetTable<specialize>();
			}
		}
		
		public System.Data.Linq.Table<visit> visits
		{
			get
			{
				return this.GetTable<visit>();
			}
		}
		
		public System.Data.Linq.Table<Action> Actions
		{
			get
			{
				return this.GetTable<Action>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Doctor")]
	public partial class Doctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DoctorID;
		
		private string _DoctorName;
		
		private System.Nullable<decimal> _visitvalue;
		
		private System.Nullable<decimal> _Revisitvalue;
		
		private string _specializID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoctorIDChanging(int value);
    partial void OnDoctorIDChanged();
    partial void OnDoctorNameChanging(string value);
    partial void OnDoctorNameChanged();
    partial void OnvisitvalueChanging(System.Nullable<decimal> value);
    partial void OnvisitvalueChanged();
    partial void OnRevisitvalueChanging(System.Nullable<decimal> value);
    partial void OnRevisitvalueChanged();
    partial void OnspecializIDChanging(string value);
    partial void OnspecializIDChanged();
    #endregion
		
		public Doctor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DoctorID
		{
			get
			{
				return this._DoctorID;
			}
			set
			{
				if ((this._DoctorID != value))
				{
					this.OnDoctorIDChanging(value);
					this.SendPropertyChanging();
					this._DoctorID = value;
					this.SendPropertyChanged("DoctorID");
					this.OnDoctorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorName", DbType="NVarChar(MAX)")]
		public string DoctorName
		{
			get
			{
				return this._DoctorName;
			}
			set
			{
				if ((this._DoctorName != value))
				{
					this.OnDoctorNameChanging(value);
					this.SendPropertyChanging();
					this._DoctorName = value;
					this.SendPropertyChanged("DoctorName");
					this.OnDoctorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visitvalue", DbType="Decimal(18,10)")]
		public System.Nullable<decimal> visitvalue
		{
			get
			{
				return this._visitvalue;
			}
			set
			{
				if ((this._visitvalue != value))
				{
					this.OnvisitvalueChanging(value);
					this.SendPropertyChanging();
					this._visitvalue = value;
					this.SendPropertyChanged("visitvalue");
					this.OnvisitvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revisitvalue", DbType="Decimal(18,10)")]
		public System.Nullable<decimal> Revisitvalue
		{
			get
			{
				return this._Revisitvalue;
			}
			set
			{
				if ((this._Revisitvalue != value))
				{
					this.OnRevisitvalueChanging(value);
					this.SendPropertyChanging();
					this._Revisitvalue = value;
					this.SendPropertyChanged("Revisitvalue");
					this.OnRevisitvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specializID", DbType="NVarChar(MAX)")]
		public string specializID
		{
			get
			{
				return this._specializID;
			}
			set
			{
				if ((this._specializID != value))
				{
					this.OnspecializIDChanging(value);
					this.SendPropertyChanging();
					this._specializID = value;
					this.SendPropertyChanged("specializID");
					this.OnspecializIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.employee")]
	public partial class employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _empID;
		
		private string _empName;
		
		private System.Nullable<decimal> _empphone;
		
		private System.Nullable<int> _jobId;
		
		private System.Nullable<decimal> _empsalary;
		
		private System.Nullable<System.DateTime> _hiredate;
		
		private System.Nullable<bool> _isActive;
		
		private string _note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnempIDChanging(int value);
    partial void OnempIDChanged();
    partial void OnempNameChanging(string value);
    partial void OnempNameChanged();
    partial void OnempphoneChanging(System.Nullable<decimal> value);
    partial void OnempphoneChanged();
    partial void OnjobIdChanging(System.Nullable<int> value);
    partial void OnjobIdChanged();
    partial void OnempsalaryChanging(System.Nullable<decimal> value);
    partial void OnempsalaryChanged();
    partial void OnhiredateChanging(System.Nullable<System.DateTime> value);
    partial void OnhiredateChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    partial void OnnoteChanging(string value);
    partial void OnnoteChanged();
    #endregion
		
		public employee()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int empID
		{
			get
			{
				return this._empID;
			}
			set
			{
				if ((this._empID != value))
				{
					this.OnempIDChanging(value);
					this.SendPropertyChanging();
					this._empID = value;
					this.SendPropertyChanged("empID");
					this.OnempIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empName", DbType="NVarChar(50)")]
		public string empName
		{
			get
			{
				return this._empName;
			}
			set
			{
				if ((this._empName != value))
				{
					this.OnempNameChanging(value);
					this.SendPropertyChanging();
					this._empName = value;
					this.SendPropertyChanged("empName");
					this.OnempNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empphone", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> empphone
		{
			get
			{
				return this._empphone;
			}
			set
			{
				if ((this._empphone != value))
				{
					this.OnempphoneChanging(value);
					this.SendPropertyChanging();
					this._empphone = value;
					this.SendPropertyChanged("empphone");
					this.OnempphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobId", DbType="Int")]
		public System.Nullable<int> jobId
		{
			get
			{
				return this._jobId;
			}
			set
			{
				if ((this._jobId != value))
				{
					this.OnjobIdChanging(value);
					this.SendPropertyChanging();
					this._jobId = value;
					this.SendPropertyChanged("jobId");
					this.OnjobIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_empsalary", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> empsalary
		{
			get
			{
				return this._empsalary;
			}
			set
			{
				if ((this._empsalary != value))
				{
					this.OnempsalaryChanging(value);
					this.SendPropertyChanging();
					this._empsalary = value;
					this.SendPropertyChanged("empsalary");
					this.OnempsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hiredate", DbType="DateTime")]
		public System.Nullable<System.DateTime> hiredate
		{
			get
			{
				return this._hiredate;
			}
			set
			{
				if ((this._hiredate != value))
				{
					this.OnhiredateChanging(value);
					this.SendPropertyChanging();
					this._hiredate = value;
					this.SendPropertyChanged("hiredate");
					this.OnhiredateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_note", DbType="NVarChar(MAX)")]
		public string note
		{
			get
			{
				return this._note;
			}
			set
			{
				if ((this._note != value))
				{
					this.OnnoteChanging(value);
					this.SendPropertyChanging();
					this._note = value;
					this.SendPropertyChanged("note");
					this.OnnoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.job")]
	public partial class job : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _jobID;
		
		private string _jobDesc;
		
		private System.Nullable<bool> _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnjobIDChanging(int value);
    partial void OnjobIDChanged();
    partial void OnjobDescChanging(string value);
    partial void OnjobDescChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public job()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int jobID
		{
			get
			{
				return this._jobID;
			}
			set
			{
				if ((this._jobID != value))
				{
					this.OnjobIDChanging(value);
					this.SendPropertyChanging();
					this._jobID = value;
					this.SendPropertyChanged("jobID");
					this.OnjobIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jobDesc", DbType="NVarChar(MAX)")]
		public string jobDesc
		{
			get
			{
				return this._jobDesc;
			}
			set
			{
				if ((this._jobDesc != value))
				{
					this.OnjobDescChanging(value);
					this.SendPropertyChanging();
					this._jobDesc = value;
					this.SendPropertyChanged("jobDesc");
					this.OnjobDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patient")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _patientID;
		
		private string _patientName;
		
		private System.Nullable<int> _patientage;
		
		private string _patientphone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpatientIDChanging(int value);
    partial void OnpatientIDChanged();
    partial void OnpatientNameChanging(string value);
    partial void OnpatientNameChanged();
    partial void OnpatientageChanging(System.Nullable<int> value);
    partial void OnpatientageChanged();
    partial void OnpatientphoneChanging(string value);
    partial void OnpatientphoneChanged();
    #endregion
		
		public patient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int patientID
		{
			get
			{
				return this._patientID;
			}
			set
			{
				if ((this._patientID != value))
				{
					this.OnpatientIDChanging(value);
					this.SendPropertyChanging();
					this._patientID = value;
					this.SendPropertyChanged("patientID");
					this.OnpatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientName", DbType="NVarChar(50)")]
		public string patientName
		{
			get
			{
				return this._patientName;
			}
			set
			{
				if ((this._patientName != value))
				{
					this.OnpatientNameChanging(value);
					this.SendPropertyChanging();
					this._patientName = value;
					this.SendPropertyChanged("patientName");
					this.OnpatientNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientage", DbType="Int")]
		public System.Nullable<int> patientage
		{
			get
			{
				return this._patientage;
			}
			set
			{
				if ((this._patientage != value))
				{
					this.OnpatientageChanging(value);
					this.SendPropertyChanging();
					this._patientage = value;
					this.SendPropertyChanged("patientage");
					this.OnpatientageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientphone", DbType="NVarChar(MAX)")]
		public string patientphone
		{
			get
			{
				return this._patientphone;
			}
			set
			{
				if ((this._patientphone != value))
				{
					this.OnpatientphoneChanging(value);
					this.SendPropertyChanging();
					this._patientphone = value;
					this.SendPropertyChanged("patientphone");
					this.OnpatientphoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.specialize")]
	public partial class specialize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _specializeID;
		
		private string _specializeName;
		
		private System.Nullable<bool> _isActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnspecializeIDChanging(int value);
    partial void OnspecializeIDChanged();
    partial void OnspecializeNameChanging(string value);
    partial void OnspecializeNameChanged();
    partial void OnisActiveChanging(System.Nullable<bool> value);
    partial void OnisActiveChanged();
    #endregion
		
		public specialize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specializeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int specializeID
		{
			get
			{
				return this._specializeID;
			}
			set
			{
				if ((this._specializeID != value))
				{
					this.OnspecializeIDChanging(value);
					this.SendPropertyChanging();
					this._specializeID = value;
					this.SendPropertyChanged("specializeID");
					this.OnspecializeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_specializeName", DbType="NVarChar(50)")]
		public string specializeName
		{
			get
			{
				return this._specializeName;
			}
			set
			{
				if ((this._specializeName != value))
				{
					this.OnspecializeNameChanging(value);
					this.SendPropertyChanging();
					this._specializeName = value;
					this.SendPropertyChanged("specializeName");
					this.OnspecializeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit")]
		public System.Nullable<bool> isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.visit")]
	public partial class visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _visitID;
		
		private System.DateTime _visitdate;
		
		private System.Nullable<int> _DoctorId;
		
		private System.Nullable<decimal> _visitvalue;
		
		private System.Nullable<int> _patientID;
		
		private string _Descreption;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvisitIDChanging(int value);
    partial void OnvisitIDChanged();
    partial void OnvisitdateChanging(System.DateTime value);
    partial void OnvisitdateChanged();
    partial void OnDoctorIdChanging(System.Nullable<int> value);
    partial void OnDoctorIdChanged();
    partial void OnvisitvalueChanging(System.Nullable<decimal> value);
    partial void OnvisitvalueChanged();
    partial void OnpatientIDChanging(System.Nullable<int> value);
    partial void OnpatientIDChanged();
    partial void OnDescreptionChanging(string value);
    partial void OnDescreptionChanged();
    #endregion
		
		public visit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int visitID
		{
			get
			{
				return this._visitID;
			}
			set
			{
				if ((this._visitID != value))
				{
					this.OnvisitIDChanging(value);
					this.SendPropertyChanging();
					this._visitID = value;
					this.SendPropertyChanged("visitID");
					this.OnvisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visitdate", DbType="DateTime NOT NULL")]
		public System.DateTime visitdate
		{
			get
			{
				return this._visitdate;
			}
			set
			{
				if ((this._visitdate != value))
				{
					this.OnvisitdateChanging(value);
					this.SendPropertyChanging();
					this._visitdate = value;
					this.SendPropertyChanged("visitdate");
					this.OnvisitdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorId", DbType="Int")]
		public System.Nullable<int> DoctorId
		{
			get
			{
				return this._DoctorId;
			}
			set
			{
				if ((this._DoctorId != value))
				{
					this.OnDoctorIdChanging(value);
					this.SendPropertyChanging();
					this._DoctorId = value;
					this.SendPropertyChanged("DoctorId");
					this.OnDoctorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visitvalue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> visitvalue
		{
			get
			{
				return this._visitvalue;
			}
			set
			{
				if ((this._visitvalue != value))
				{
					this.OnvisitvalueChanging(value);
					this.SendPropertyChanging();
					this._visitvalue = value;
					this.SendPropertyChanged("visitvalue");
					this.OnvisitvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_patientID", DbType="Int")]
		public System.Nullable<int> patientID
		{
			get
			{
				return this._patientID;
			}
			set
			{
				if ((this._patientID != value))
				{
					this.OnpatientIDChanging(value);
					this.SendPropertyChanging();
					this._patientID = value;
					this.SendPropertyChanged("patientID");
					this.OnpatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descreption", DbType="NVarChar(MAX)")]
		public string Descreption
		{
			get
			{
				return this._Descreption;
			}
			set
			{
				if ((this._Descreption != value))
				{
					this.OnDescreptionChanging(value);
					this.SendPropertyChanging();
					this._Descreption = value;
					this.SendPropertyChanged("Descreption");
					this.OnDescreptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Action")]
	public partial class Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ActionName;
		
		private string _Notes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnActionNameChanging(string value);
    partial void OnActionNameChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    #endregion
		
		public Action()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionName", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ActionName
		{
			get
			{
				return this._ActionName;
			}
			set
			{
				if ((this._ActionName != value))
				{
					this.OnActionNameChanging(value);
					this.SendPropertyChanging();
					this._ActionName = value;
					this.SendPropertyChanged("ActionName");
					this.OnActionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NChar(250)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
